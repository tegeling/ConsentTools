# Unique name for this workflow
name: Salesforce DX (scratch org)

# Definition when the workflow should run
on:
  push:
    branches:
      - main

# Jobs to be executed
jobs:
  scratch-org-test:
    runs-on: ubuntu-latest
    steps:
      # Install Salesforce CLI
      - name: Install Salesforce CLI
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
          mkdir sfdx-cli
          tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
          ./sfdx-cli/install

      # Checkout the code in the pull request
      - name: "Checkout source code"
        uses: actions/checkout@v2

      # Store secret for dev hub
      - name: "Populate auth file with DEVHUB_SFDX_URL secret"
        shell: bash
        run: "echo ${{ secrets.DEVHUB_SFDX_URL}} > ./DEVHUB_SFDX_URL.txt"

      # Authenticate dev hub
      - name: "Authenticate Dev Hub"
        run: "sfdx force:auth:sfdxurl:store -f ./DEVHUB_SFDX_URL.txt -a devhub -d"

      # Lint Aura components
      - name: "Lint Aura components"
        run: "sfdx force:lightning:lint force-app/main/default/aura --exit"

      # Create scratch org
      - name: "Create scratch org"
        run: "sfdx force:org:create -f config/project-scratch-def.json -a scratch-org -s -d 1"

      # Deploy source to scratch org
      - name: "Push source to scratch org"
        run: "sfdx force:source:push"

      # Assign permissionset
      - name: "Assign permissionset to default user"
        run: "sfdx force:user:permset:assign -n ConsentSettingsInternal"

      # Run Apex tests in scratch org
      - name: "Run Apex tests"
        run: "sfdx force:apex:test:run -c -r human -d ./tests/apex -w 20"

      # Upload code coverage data
      - name: "Upload code coverage for Apex to Codecov.io"
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      # Remove test result files
      - name: "Remove test result files"
        run: rm -rf ./tests

      # Housekeeping
      - name: "Delete scratch org"
        if: always()
        run: "sfdx force:org:delete -p -u scratch-org"
